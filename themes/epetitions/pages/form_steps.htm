url = "/formsteps"
layout = "default"
title = "form_steps"
==
<?php
use Illuminate\Support\Facades\Request;
use Illuminate\Support\Facades\Http;
use System\Models\File;

public function progressBar()
{
    $steps = ['Step 1', 'Step 2', 'Step 3'];
    $currentStep = Request::input('step', 0);
    return view('progressbar', [
        'steps' => $steps,
        'currentStep' => ($currentStep + 1) * (100 / count($steps)),
    ]);
}


function onCreatePetition()
{
    

  $file = \Storage::put(Input::file('doc_type')->getClientOriginalName(), Input::file('doc_type'));
    $response = Http::post('http://lin-intranet.parliament.gov.za/api/v1/ahmadfatoni/apigeneratorcontroller', [
    
    
    Auth::getUser() ? Auth::getUser()->id : null,
    'title' =>Input::get('title'),
    'intended_to' => Input::get('intended_to'),
    'description' =>Input::get('description'),
    'name' =>Input::get('name'),
    'id_number' =>Input::get('id_number'),
    'phone_number' =>Input::get('phone_number'),
    'province' =>Input::get('province'),
    'municipality' =>Input::get('municipality'),
    'email' =>Input::get('email'),
    'password' =>'Parliament8@',
    'password_confirmation' =>'Parliament8@',
    'doc_type' => Input::file('doc_type'),
    'filename' => Input::file('doc_type')->getClientOriginalName(),
    'reason' =>'None'
]);


if($response->successful())
{
    return redirect('/dashboard');

}else{

    return  redirect('/formsteps');
}

 /*if($response->successful())
 {

     return redirect('/dashboard');
    // send the file upload
    //http://localhost/epetition/api/v1/ahmadfatoni/apigeneratorcontroller/petitions/34/attachments;

   /*\Log::info('ID: '.json_decode($response->body(), true)['id']);

    $id = json_decode($response->body(), true)['id'];
    
    $response = Http::attach('attachments', Input::file('doc_type'), Input::file('doc_type')->getClientOriginalName())
    ->post('http://localhost/epetition/api/v1/ahmadfatoni/apigeneratorcontroller/petitions' . $id . '/attachments');
    // return redirect('/dashboard');

    
    return $response->successful()? \Flash::info('upload Done') : \Flash::info('Error');*/
 /*}else{
   \Log::info($response->body());
    
    //return  redirect('/newpetition');
 }
 
}
 

return true;*/
 
 }
?>
==
<!DOCTYPE html>
<html>
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<link href="https://fonts.googleapis.com/css?family=Raleway" rel="stylesheet">
<style>
* {
  box-sizing: border-box;
}

body {
  background-color: #f1f1f1;
}

#regForm {
  background-color: #ffffff;
  margin: 100px auto;
  font-family: Raleway;
  padding: 40px;
  width: 70%;
  min-width: 300px;
}

h1 {
  text-align: center;  
}

.mandatory{
  color:red;
}

input {
  padding: 10px;
  width: 100%;
  font-size: 17px;
  font-family: Raleway;
  border: 1px solid #aaaaaa;
}

/* Mark input boxes that gets an error on validation: */
input.invalid {
  background-color: #ffdddd;
}

/* Hide all steps by default: */
.tab {
  display: none;
}



button {
  background-color: #04AA6D;
  color: #ffffff;
  border: none;
  padding: 10px 20px;
  font-size: 17px;
  font-family: Raleway;
  cursor: pointer;
}

button:hover {
  opacity: 0.8;
}

#prevBtn {
  background-color: #bbbbbb;
}



/* Make circles that indicate the steps of the form: */
.step {
  height: 15px;
  width: 15px;
  margin: 0 2px;
  background-color: #bbbbbb;
  border: none;  
  border-radius: 50%;
  display: inline-block;
  opacity: 0.5;
}

.step.active {
  opacity: 1;
}

/* Mark the steps that are finished and valid: */
.step.finish {
  background-color: #275937;
}
</style>
<body>

<form id="regForm" data-request="onCreatePetition" data-request-files>
  <h2>Request a new e-petition </h2>
  <!-- One "tab" for each step in the form: -->
   {% if user %}
  <div class="tab">
  
    ><label for="registerTitle">Petition Title <span class="mandatory">*</span>:</label>
    <p><input type="text" class="form-control" placeholder="Petition title..." oninput="this.className = ''" name="title"></p>
    <p><strong><em>Tip:</em></strong>&nbsp;&nbsp;<em>The petition title is a summary of your petition request and the first part of the petition that people will see. Keep it short and to the point.</em><br><br></p>
   <label for="registerIntended_to">Intended Receipient Of The Petition <span class="mandatory">*</span>:</label >
    <p><input type="text" class="form-control" placeholder="Intended to..." oninput="this.className = ''" name="intended_to"></p>
   <p>Words directed to where the petition is going to.</p>
  </div>
  <div class="tab"><label for="registerDescription">Description <span class="mandatory">*</span>:</label>
    <p><textarea class="form-control" rows="4"  cols="81" placeholder="indicate expected action from Parliament in response to the matters raised in the petition" oninput="this.className = ''" name="description"></textarea> </p>
   <p><strong><em>Tip:</em></strong><em>&nbsp;Make sure your reason is clear and easy to understand. People are more likely to sign your petition if they understand why you are making the request.<br></em><br></p>
  </div>
  <div class="tab">Petition Attachment:
    <p><input type="file" class="form-control" name="doc_type" ></p>
    
  </div>
  {% else %}

    <div class="tab">Petition Title <span class="mandatory">*</span>:
    <p><input type="text" class="form-control" placeholder="Petition title..." oninput="this.className = ''" name="title"></p>
    <p><strong><em>Tip:</em></strong>&nbsp;&nbsp;<em>The petition title is a summary of your petition request and the first part of the petition that people will see. Keep it short and to the point.</em><br><br></p>
    Intended Receipient Of The Petition <span class="mandatory">*</span>:
    <p><input type="text" class="form-control" placeholder="Intended to..." oninput="this.className = ''" name="intended_to"></p>
   <p>Words directed to where the petition is going to.</p>
  </div>
  <div class="tab">Description <span class="mandatory">*</span>:
    <p><textarea class="form-control" rows="4"  cols="81" placeholder="indicate expected action from Parliament in response to the matters raised in the petition" oninput="this.className = ''" name="description"></textarea> </p>
   <p><strong><em>Tip:</em></strong><em>&nbsp;Make sure your reason is clear and easy to understand. People are more likely to sign your petition if they understand why you are making the request.<br></em><br></p>
  </div>
  <div class="tab"<label for="registerAttachment">Petition Attachment:</label>
    <p><input type="file" class="form-control" name="doc_type" ></p>
    
  </div>

  <div class="tab">
  <h3 >Please fill in your details â€“ you are the Principal Petitioner</h3>
   <label for="registerName">Full Name</label>
    <p><input name="name" type="text" class="form-control" id="registerName" placeholder="Enter your full name"  oninput="this.className = ''"></p>
     <label for="registerID">ID Number</label>
    <p><input name="id_number" type="tel" class="form-control" id="registerID" placeholder="Enter ID Number"  oninput="this.className = ''"  maxlength="13"></p>
    <label for="registerPhoneNumber">Phone Number</label>
     <p><input input name="phone_number" type="text" class="form-control" id="registerPhoneNumber"
        placeholder="Enter Phone Number"  oninput="this.className = ''"  maxlength="13"></p>
        <div class="form-group">
        <label for="registerProvince">Province</label><br>
    <select id="select-field1" onchange="updateSelectField()" name="province" oninput="this.className = ''"  class="form-control">
        <option class="form-control"  value="">Select...</option>
        <option class="form-control" value="0">Eastern Cape</option>
        <option value="1">Free State</option>
        <option value="Gauteng">Gauteng</option>
        <option value="KwaZulu-Natal">KwaZulu-Natal</option>
        <option value="Limpopo">Limpopo</option>
        <option value="Mpumalanga">Mpumalanga</option>
        <option value="Northern Cape">Northern Cape</option>
        <option value="North West">North West</option>
        <option value="Western Cape">Western Cape</option>
    </select>
    </div>
    <div class="form-group">
    <label for="registerMunicipality">Municipality</label>
    <select id="select-field2" name="municipality" class="form-control">
        <option value="City Of Cape Town">City Of Cape Town</option>
    </select>
    </div>
         <label for="registerEmail">Email</label>
      <p><input name="email" type="email" class="form-control" id="registerEmail" placeholder="Enter your email"   oninput="this.className = ''"  ></p>
       
  </div>
  {% endif %}
  <div style="overflow:auto;">
    <div style="float:right;">
      <button type="button" style="background-color:#9e7c0c;color:#ffffff" class="btn btn-default" id="prevBtn" onclick="nextPrev(-1)">Previous</button>
      <button type="button" id="nextBtn" onclick="nextPrev(1)" style="background-color:#9e7c0c;color:#ffffff" class="btn btn-default">Next</button>
       <!--<button type="submit"  id="regForm" style="background-color:#9e7c0c;color:#ffffff" class="btn btn-default">Create</button>-->
    </div>
  </div>
  <!-- Circles which indicates the steps of the form: -->
  <div style="text-align:center;margin-top:40px;">
    <span class="step"></span>
    <span class="step"></span>
    <span class="step"></span>
    <span class="step"></span>
  </div>
</form>

<script>
var currentTab = 0; // Current tab is set to be the first tab (0)
showTab(currentTab); // Display the current tab

function showTab(n) {
  // This function will display the specified tab of the form...
  var x = document.getElementsByClassName("tab");
  x[n].style.display = "block";
  //... and fix the Previous/Next buttons:
  if (n == 0) {
    document.getElementById("prevBtn").style.display = "none";
  } else {
    document.getElementById("prevBtn").style.display = "inline";
  }
  if (n == (x.length - 1)) {
    document.getElementById("nextBtn").innerHTML = "Submit";
  } else {
    document.getElementById("nextBtn").innerHTML = "Next";
  }
  //... and run a function that will display the correct step indicator:
  fixStepIndicator(n)
}

function nextPrev(n) {
  // This function will figure out which tab to display
  var x = document.getElementsByClassName("tab");
  // Exit the function if any field in the current tab is invalid:
  if (n == 1 && !validateForm()) return false;
  // Hide the current tab:
  x[currentTab].style.display = "none";
  // Increase or decrease the current tab by 1:
  currentTab = currentTab + n;
  // if you have reached the end of the form...
 if (currentTab >= x.length) {
    // ... the form gets submitted:
    document.getElementById("regForm").submit();
    return false;
 // }
  // Otherwise, display the correct tab:
  showTab(currentTab);
}

function validateForm() {
  // This function deals with validation of the form fields
  var x, y, i, valid = true;
  x = document.getElementsByClassName("tab");
  y = x[currentTab].getElementsByTagName("input");
  // A loop that checks every input field in the current tab:
  for (i = 0; i < y.length; i++) {
    // If a field is empty...
    if (y[i].value == "") {
      // add an "invalid" class to the field:
      y[i].className += " invalid";
      // and set the current valid status to false
      valid = false;
    }
  }
  // If the valid status is true, mark the step as finished and valid:
  if (valid) {
    document.getElementsByClassName("step")[currentTab].className += " finish";
  }
  return valid; // return the valid status
}

function fixStepIndicator(n) {
  // This function removes the "active" class of all steps...
  var i, x = document.getElementsByClassName("step");
  for (i = 0; i < x.length; i++) {
    x[i].className = x[i].className.replace(" active", "");
  }
  //... and adds the "active" class on the current step:
  x[n].className += " active";
}
</script>


<script>
    var values = [
        ["Buffalo City Metropolitan", "Nelson Mandela Bay Metropolitan", "Matatiele Local", "Ntabankulu Local", "Umzimvubu Local"],
        ["Mangaung Metropolitan", "Mafube Local", "Metsimaholo Local", "Moqhaka Local", "Ngwathe Local"],
       
    ];

    function updateSelectField() {
        var selectField1 = document.getElementById("select-field1");
        var selectField2 = document.getElementById("select-field2");
        var selectedIndex = selectField1.value;

        selectField2.innerHTML = "";

        for (var i = 0; i < values[selectedIndex].length; i++) {
            var option = document.createElement("option");
            option.value = i;
            option.text = values[selectedIndex][i];

            selectField2.appendChild(option);
        }
    }
</script>


</body>
</html>